diff --git a/node_modules/react-native-shadow-2/lib/index.js b/node_modules/react-native-shadow-2/lib/index.js
index 40b1b4a..2c9f541 100644
--- a/node_modules/react-native-shadow-2/lib/index.js
+++ b/node_modules/react-native-shadow-2/lib/index.js
@@ -20,7 +20,7 @@ function ShadowInner(props) {
     const [idSuffix] = useState(generateGradientIdSuffix);
     const { sides, corners, startColor: startColorProp, endColor: endColorProp, distance: distanceProp, style: styleProp, safeRender, stretch, 
     /** Defaults to true if offset is defined, else defaults to false */
-    paintInside = props.offset ? true : false, offset = defaultOffset, children, containerStyle, shadowViewProps, childrenViewProps, containerViewProps, } = props;
+    paintInside = props.offset ? true : false, offset = defaultOffset, children, containerStyle, shadowViewProps, childrenViewProps, containerViewProps, offsetLine } = props;
     /** `s` is a shortcut for `style` I am using in another lib of mine (react-native-gev). While currently no one uses it besides me,
      * I believe it may come to be a popular pattern eventually :) */
     const childProps = Children.count(children) === 1
@@ -109,6 +109,7 @@ function ShadowInner(props) {
             height,
             isRTL,
             distanceProp,
+            offsetLine,
             startColorProp,
             endColorProp,
             paintInside,
@@ -166,6 +167,7 @@ function ShadowInner(props) {
         styleHeight,
         childLayout,
         setChildLayout,
+        offsetLine,
     });
 }
 /** We make some effort for this to be likely memoized */
@@ -186,7 +188,7 @@ function sanitizeRadii({ width, height, radii, }) {
 }
 /** The SVG parts. */
 // We default the props here for a micro improvement in performance. endColorProp default value was the main reason.
-function getShadow({ safeRender, width, height, isRTL, distanceProp = 10, startColorProp = '#00000020', endColorProp = colord(startColorProp).alpha(0).toHex(), topStart, topEnd, bottomStart, bottomEnd, activeSides, activeCorners, paintInside, idSuffix, }) {
+function getShadow({ safeRender, width, height, isRTL, distanceProp = 10, startColorProp = '#00000020', endColorProp = colord(startColorProp).alpha(0).toHex(), topStart, topEnd, bottomStart, bottomEnd, activeSides, activeCorners, paintInside, idSuffix, offsetLine = 1 }) {
     // Skip if using safeRender and we still don't have the exact sizes, if we are still on the first render using the relative sizes.
     if (safeRender && (typeof width === 'string' || typeof height === 'string'))
         return null;
@@ -249,7 +251,7 @@ function getShadow({ safeRender, width, height, isRTL, distanceProp = 10, startC
           </Defs>
           <Rect width={distance} height={height} fill={`url(#end.${idSuffix})`} y={-sumDps(topEnd, bottomEnd)}/>
         </Svg>)}
-      {activeSides.top && (typeof width === 'number' ? width > topStart + topEnd : true) && (<Svg width={widthWithAdditional} height={distanceWithAdditional} style={Object.assign({ position: 'absolute', top: -distance, start: topStart }, (isRTL && rtlScaleX))}>
+      {activeSides.top && (typeof width === 'number' ? width > topStart + topEnd : true) && (<Svg width={widthWithAdditional} height={distanceWithAdditional} style={Object.assign({ position: 'absolute', top: -distance, start: topStart + (isRTL ? offsetLine : 0 ) }, (isRTL && rtlScaleX))}>
           <Defs>
             <LinearGradient id={`top.${idSuffix}`} x1='0' y1='1' x2='0' y2='0'>
               {linearGradient}
@@ -258,7 +260,7 @@ function getShadow({ safeRender, width, height, isRTL, distanceProp = 10, startC
           <Rect width={width} height={distance} fill={`url(#top.${idSuffix})`} x={-sumDps(topStart, topEnd)}/>
         </Svg>)}
       {activeSides.bottom &&
-            (typeof width === 'number' ? width > bottomStart + bottomEnd : true) && (<Svg width={widthWithAdditional} height={distanceWithAdditional} style={Object.assign({ position: 'absolute', top: height, start: bottomStart }, (isRTL && rtlScaleX))}>
+            (typeof width === 'number' ? width > bottomStart + bottomEnd : true) && (<Svg width={widthWithAdditional} height={distanceWithAdditional} style={Object.assign({ position: 'absolute', top: height, start: bottomStart + (isRTL ? offsetLine : 0 ) }, (isRTL && rtlScaleX))}>
             <Defs>
               <LinearGradient id={`bottom.${idSuffix}`} x1='0' y1='0' x2='0' y2='1'>
                 {linearGradient}
